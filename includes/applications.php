<?php
//Display errors for debugging

// ini_set('display_errors', 1);
// ini_set('display_startup_errors', 1);
// error_reporting(E_ALL);


//for confirmation email
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;
//use env file instead of hardcoding passwords
use Dotenv\Dotenv;

// Auto load generated by composer
require 'vendor/autoload.php';
use Aws\S3\S3Client; 


//load .env file
$dotenv = Dotenv::createImmutable(__DIR__);
$dotenv->load();


// Amazon S3 API credentials
$region = 'us-east-1';
$version = 'latest';
$access_key_id = $_ENV['AWS_ACCESS_KEY_ID'];
$secret_access_key = $_ENV['AWS_SECRET_ACCESS_KEY'];
$bucket = "student-applications-bucket";

// Initialize $api_error to avoid undefined variable issues
$api_error = '';
$statusMsg = '';



// Filter and sanitize form inputs
$first_name = htmlspecialchars(filter_input(INPUT_POST, "first_name"));
$last_name = htmlspecialchars(filter_input(INPUT_POST, "last_name"));
$category = htmlspecialchars(filter_input(INPUT_POST, "category")?? '');
$address = htmlspecialchars(filter_input(INPUT_POST, "address"));
$city = htmlspecialchars(filter_input(INPUT_POST, "city"));
$state = htmlspecialchars(filter_input(INPUT_POST, "state"));
$zipcode = filter_input(INPUT_POST, "zipcode", FILTER_SANITIZE_NUMBER_INT);
$phone = filter_input(INPUT_POST, "phone", FILTER_SANITIZE_NUMBER_INT);
$email = filter_input(INPUT_POST, "email", FILTER_VALIDATE_EMAIL);
$highschool = htmlspecialchars(filter_input(INPUT_POST, "highschool"));
$guidance_counselor = htmlspecialchars(filter_input(INPUT_POST, "guidance_counselor"));
$graduation_date = htmlspecialchars(filter_input(INPUT_POST, "graduation_date"));
$GPA = filter_input(INPUT_POST, "GPA", FILTER_VALIDATE_FLOAT);
$SAT = filter_input(INPUT_POST, "SAT", FILTER_VALIDATE_INT);
$ACT = filter_input(INPUT_POST, "ACT", FILTER_VALIDATE_INT);
$college_name = htmlspecialchars(filter_input(INPUT_POST, "college_name"));
$college_city = htmlspecialchars(filter_input(INPUT_POST, "college_city") ?? '');
$college_state = htmlspecialchars(filter_input(INPUT_POST, "college_state") ?? '');
$accepted = htmlspecialchars(filter_input(INPUT_POST, "accepted")?? '');
$parent1_name = htmlspecialchars(filter_input(INPUT_POST, "parent1_name"));
$parent1_phone = filter_input(INPUT_POST, "parent1_phone", FILTER_SANITIZE_NUMBER_INT);
$parent2_name = htmlspecialchars(filter_input(INPUT_POST, "parent2_name"));
$parent2_phone = filter_input(INPUT_POST, "parent2_phone", FILTER_SANITIZE_NUMBER_INT);
$awards = htmlspecialchars(filter_input(INPUT_POST, "awards"));
$school_org_activity = htmlspecialchars(filter_input(INPUT_POST, "school_org_activity"));
$vol_community_activity = htmlspecialchars(filter_input(INPUT_POST, "vol_community_activity"));
$work_experience = htmlspecialchars(filter_input(INPUT_POST, "work_experience"));
$personal_statement = htmlspecialchars(filter_input(INPUT_POST, "personal_statement"));
$submissionDate = (new DateTime('now', new DateTimeZone('America/New_York')))->format('Y-m-d H:i:s');

// Connection to the database
// host, admin, password, db name, port
$con = mysqli_connect($_ENV['DB_HOST'], $_ENV['DB_USER'], $_ENV['DB_PASSWORD'], $_ENV['DB_NAME'], $_ENV['DB_PORT']);
if (mysqli_connect_errno()) {
    echo "Failed to connect to MySQL: " . mysqli_connect_error();
    exit;
}

    //check if deadline has passed before submitting
    $getDeadline = "SELECT date FROM deadlines ORDER BY id DESC LIMIT 1";
    $result = mysqli_query($con, $getDeadline);
    $applicationDeadline = mysqli_fetch_assoc($result)["date"];

    $currentDate = new DateTime('now', new DateTimeZone('America/New_York'));
    $dueDate = new DateTime($applicationDeadline, new DateTimeZone('America/New_York'));

    if ($currentDate > $dueDate){
        $disabled = "disabled";
    } else{ 
        $disabled = "";
    }


// If file upload form is submitted
if (isset($_POST["submit"])) {
    //check if required fields are entered befreo submitting
    //EDIT: ADD OTHERS!!!
    if (!empty($first_name) && !empty($last_name) && !empty($email)){

        //submit form to db before file uploads (to grab applicant id)
        //db name: applications: 
        $status = "Not Reviewed";
        $insert = "INSERT INTO `applications` (
            first_name, last_name, category, status, address, city, state, zipcode, phone, 
            email, highschool, guidance_counselor, graduation_date, GPA, 
            SAT, ACT, college_name, college_city, college_state, accepted, 
            parent1_name, parent1_phone, parent2_name, parent2_phone, awards, 
            school_org_activity, vol_community_activity, work_experience, personal_statement, submissionDate
        ) VALUES (?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

        $stmt = mysqli_stmt_init($con);
        if (!mysqli_stmt_prepare($stmt, $insert)) {
            die(mysqli_error($con));
        }

        // Bind the form data and file URL
        mysqli_stmt_bind_param($stmt, "sssssssiissssiiisssssisissssss", 
            $first_name, $last_name, $category, $status, $address, $city, $state, $zipcode, $phone, 
            $email, $highschool, $guidance_counselor, $graduation_date, $GPA, 
            $SAT, $ACT, $college_name, $college_city, $college_state, $accepted, 
            $parent1_name, $parent1_phone, $parent2_name, $parent2_phone, $awards, 
            $school_org_activity, $vol_community_activity, $work_experience, $personal_statement, $submissionDate
        );

        // Execute the insert query
        mysqli_stmt_execute($stmt);
        //$statusMsg = "Application submitted successfully!";

        //SEND EMAIL CONFIRMATION AFTER APPLICANT SUBMITS
        //func to send email confirm
        function sendConfirmationEmail($recipientEmail, $recipientName){
            $mail = new PHPMailer (true);

            try{
                //SMTP config
                $mail->isSMTP();
                $mail->Host = 'smtp.gmail.com'; //use whoever SMTP provider
                $mail->SMTPAuth = true;
                $mail->Username = $_ENV['GMAIL_USERNAME']; //sender email
                $mail->Password = $_ENV['GMAIL_APP_PASSWORD']; //'nmoh nawh himr rolv'; // APP password, not REGULAR password
                $mail->SMTPSecure = PHPMailer::ENCRYPTION_SMTPS; //encryption
                $mail->Port = 465;
                
                //EDIT: REMOVE ONCE FIXED
                $mail->SMTPDebug = 2;
                $mail->Debugoutput = 'error_log';

                //confirmaiton email content
                $mail->setFrom($_ENV['GMAIL_USERNAME'], 'NCBW-QCMC Scholarship Team');
                $mail->addAddress($recipientEmail, $recipientName);
                $mail->Subject = 'NCBW-QCMC Scholarship Application Recieved';
                $mail->Body = "Dear $recipientName, \n\n"
                                . "Thank you for submitting your application to the NCBW-QCMC Scholarship Prgram.\n\n"
                                . "We have sucessfully received your application and it is currently under review.\n\n"
                                . "While we review your application, please take the time to schedule an interview with our scholarship team. "
                                . "Should there be a reason to cancel the interview, you will be notified. Please schedule your interview here: \n\n"
                                . "https://calendly.com/team2csci476/30min\n\n"
                                . "You will be contacted shortly regarding scheduling an interview. Please look out for future instructions.\n\n"
                                . "Best, \n"
                                . "NCBQ-QCMC Scholarship Team";

                //send the email
                $mail->send();
                return true;
            } catch(Exception $e){
                error_log("Email sending failed: " . $mail->ErrorInfo);
                return false;
            }
        }


        //get the last applicant id
        $applicant_id = mysqli_insert_id($con);

        //call this after inserting into db
            
        if (sendConfirmationEmail($email, $first_name)){
            $statusMsg = "Application submitted and email sent.";
        } else {
                $statusMsg = "Oops. I dont think the email sent";
        }


        //after getting applicant id, continue with file upload
        //check if files are uploaded
        if (!empty($_FILES["userfile"]["name"][0])) {


            //AWS S3 Client
            $s3 = new S3Client([
                'version' => $version, 
                'region' => $region, 
                'credentials' => [
                    'key' => $access_key_id,
                    'secret' => $secret_access_key
                ]
            ]);

            //create a folder based on the applicant id
            $folder = 'uploads/applicant_' . $applicant_id . '/';

            //EDIT: $maxFileSize = 5*1024*1024; //5MB

            //loop through each file thats uploaded
            foreach($_FILES["userfile"]["name"] as $key => $file_name){
                //$file_name = basename($_FILES["userfile"]["name"]);
                $file_type = pathinfo($file_name, PATHINFO_EXTENSION);
                $allowTypes = array('pdf', 'doc', 'docx');

                //check if file type is alowed
                if (in_array($file_type, $allowTypes)) {
                    $file_temp_src = $_FILES["userfile"]["tmp_name"][$key];

                    if (is_uploaded_file($file_temp_src)) {

                    try { 

                        //defining s3 key which is the file path in the applicants folder
                        //$folder = 'uploads/';
                        $key = $folder . basename($file_name);
    
                        // Upload file to S3 bucket
                        $result = $s3->putObject([
                            'Bucket' => $bucket,
                            'Key' => $key,
                            'SourceFile' => $file_temp_src
                        ]);
                        $result_arr = $result->toArray();
                        
                        //check to make sure file is uploaded correctly
                        if (!empty($result_arr['ObjectURL'])) {
                            $s3_file_link = $result_arr['ObjectURL'];
                            $status = 'success';
                            $statusMsg = "File uploaded successfully to S3!";
                        } else {
                            $api_error = "Upload failed! S3 object URL not found.";
                        }
                    } catch (Aws\S3\Exception\S3Exception $e) {
                        $api_error = $e->getMessage();
                    }
                } else {
                    $statusMsg = 'Sorry, invalid file format.';
                }
            } else {
                $statusMsg = "Please select a valid file to upload.";
        }
    }
}

// Insert form data into DB (after successful file upload)
if (empty($api_error)) {

     //after submit, go to success page
     header("Location: sucess.php");
     exit;
        } 
    //end if stmt checking if required fields are entered
    } else {
        $statusMsg = "Please fill out the required fields (first name, last name, email).";
    }
} else {
    $statusMsg = "Form not submitted.";
}

/*
// Print DB contents (debugging only, remove later)
$sql = "SELECT * FROM `applicationsTest`";
if ($result = mysqli_query($con, $sql)) {
    $resultArray = array(); 
    $tempArray = array();
    while ($row = $result->fetch_object()) {
        $tempArray = $row;
        array_push($resultArray, $tempArray);
    }
    echo json_encode($resultArray);
}*/





//get s3 ready again to upload JSON
$s3 = new S3Client([
    'version' => $version, 
    'region' => $region, 
    'credentials' => [
        'key' => $access_key_id,
        'secret' => $secret_access_key
    ]
]);

//specify file name and s3 bucket  & path for json file
// $filename = 'applications_data.json';
$filename = 'applications.json';
//$folder = 'uploads/' can make folder if you want

//JSON EDIT Pull from JSON
try{ 
    $existingData = [];

    //try to fetch the json from s3
    $result = $s3->getObject([
        'Bucket' => $bucket, 
        'Key' => $filename,
    ]);

    //decode exisitng json
    $json_content = $result['Body'] -> getContents();
    $existingData = json_decode($json_content, true);

    //ensure its an array
    if (!is_array($existingData)){
        $existingData = [];
    }
 } catch (Aws\S3\Exception\S3Exception $e){
        //if file dns
        $existingData = [];
    }

//Upload the json to s3
//fetch latest query 
$query = "SELECT * FROM `applications` ORDER by application_id DESC LIMIT 1";
$result = mysqli_query($con, $query);

if ($row = mysqli_fetch_assoc($result)){

    //append new entry without overwriting
    $existingData[] = $row;

    //convert back to json
    $json_data = json_encode(array_values($existingData), JSON_PRETTY_PRINT);

    
    //upload updated json file
    try{
        $result = $s3->putObject([
            'Bucket' => $bucket,
            'Key' => $filename, // could do $folder . $filename if going to folder
            'Body' => $json_data, //content of file
            'ContentType' => 'application/json', 
            //'ACL' => 'public-read'
        ]);

        //get url of uploaded JSON file
        /*$json_url = $result->get('ObjectURL');
        echo "JSON file uploaded successuly to S3" . $json_url;*/
    } catch (Aws\S3\Exception\S3Exception $e){
        echo "Error uploading file: " . $e->getMessage();
    }

}


// Output the status message
//echo $statusMsg;

// Close the database connection
mysqli_close($con);

?>
